run-name: Frontend tests flake check ${{ github.event.inputs.checkout }}
on:
  workflow_dispatch:
    inputs:
      flags:
        description: 'Flags'     
        required: true
        default: '--run_minified_tests --skip_install --check_coverage --verbose'
      checkout:
        description: 'Run frontend tests for a specific PR'
        required: false
        default: 'develop'
      reason:
        description: 'Reason'
        required: false
        default: 'Manual trigger for frontend tests'
      num-runs:
        type: number
        description: 'Number of runs to do'
        required: true
      coverage-report:
        type: boolean
        description: 'Store karma coverage report as an artifact'
        default: true
      sync-develop:
        type: boolean
        description: 'Sync with Oppia/Oppia repo develop branch'
        default: true

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  generate_summary:
    runs-on: [ubuntu-22.04]
    outputs:
      job-strategy-matrix: ${{ steps.generate.outputs.job-strategy-matrix }}
    steps:
      - uses: actions/checkout@master
        with:
          repository: oppia/oppia
      - name: Merge with develop
        run: |
          git fetch --unshallow
          gh pr checkout ${{ github.event.inputs.checkout }}
          git config --global user.email "mergeAction@example.com"
          git config --global user.name "Oppia Merge Base Branch GitHub Action"
          git merge develop --squash
      - name: Diagnostic Checks
        run: |
          echo "Current branch:"
          git branch
          echo "List of changed files in PR:"
          git diff --name-status --stat --color develop
      - name: Generate list using Markdown
        run: |
          echo "# Job summary - ${{ github.event.inputs.reason }} | PR: #${{ github.event.inputs.checkout }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          date >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          git log --oneline -n 3 >> $GITHUB_STEP_SUMMARY
      - name: Generate job strategy matrix
        id: generate
        run: |
          JOB_STRATEGY_MATRIX=$(node -e "let r=[]; for(let i = 1; i <= ${{ github.event.inputs.num-runs }}; i++) { r.push(i) }; console.log(JSON.stringify(r));")
          echo "job-strategy-matrix=$JOB_STRATEGY_MATRIX" >> $GITHUB_OUTPUT
  frontend:
    needs: generate_summary
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        id: ${{ fromJson(needs.generate_summary.outputs.job-strategy-matrix) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: oppia/oppia
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8.15'
          architecture: 'x64'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: /home/runner/work/$GITHUB_REPOSITORY/yarn_cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: ./.github/actions/install-oppia-dependencies
      - name: Suppress ENOSPC error from chokidar file watcher. See https://stackoverflow.com/a/32600959.
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - name: Checkout PR
        run: |
          git fetch --unshallow
          gh pr checkout ${{ github.event.inputs.checkout }}
      - name: Merge with develop
        if: ${{ github.event.inputs.sync-develop }}
        run: |
          git config --global user.email "mergeAction@example.com"
          git config --global user.name "Oppia Merge Base Branch GitHub Action"
          git merge develop --squash
      - name: Diagnostic Checks
        run: |
          echo "Current branch:"
          git branch
          echo "List of changed files in PR:"
          git diff --name-status --stat --color develop
      - name: Run frontend tests ${{ matrix.id }}
        run: |
          PYTHONIOENCODING=utf-8 python -m scripts.run_frontend_tests ${{ github.event.inputs.flags }}
      - name: Uploading fronted coverage reports as an artifact
        if: ${{ failure() && github.event.inputs.coverage-report }}
        uses: actions/upload-artifact@v2
        with:
          name: frontend-coverage-${{ matrix.id }}
          path: /home/runner/work/frontend-tests-flake-check-oppia/karma_coverage_reports
      - name: Generate Markdown file
        if: ${{ failure() }}
        run: |
          echo "## RUN ID: ${{ matrix.id }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          date >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          git log --oneline -n 3 > $GITHUB_STEP_SUMMARY
